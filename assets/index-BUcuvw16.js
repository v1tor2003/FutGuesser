var f=Object.defineProperty;var g=(n,t,e)=>t in n?f(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var i=(n,t,e)=>g(n,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const h of r.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&s(h)}).observe(document,{childList:!0,subtree:!0});function e(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=e(o);fetch(o.href,r)}})();const c=class c{constructor(t=2){i(this,"teams");this.options=t,this.teams=[]}async start(){this.setTeams(await this.fetchMultipleTeams())}setTeams(t){this.teams=t}getTeams(){return this.teams}async fetchTeamData(t){const s=await fetch("/api/v4/teams/"+t.toString(),{headers:{"X-Auth-Token":c.apiKey}});if(!s.ok)throw new Error(`Error fetching team dat: ${s.statusText}`);const o=await s.json();return{crest:o.crest,name:o.name}}async fetchMultipleTeams(){const t=[];for(;t.length<this.options;){const e=this.getRandomTeamId();try{const s=await this.fetchTeamData(e);t.find(o=>o.name===s.name)||t.push(s)}catch(s){console.log(s)}}return t}getRandomTeamId(){return Math.floor(Math.random()*c.MAX_ID)}getRandomTeam(){const t=Math.floor(Math.random()*this.teams.length);return this.teams[t]}toString(){return this.teams.toString()}};i(c,"apiKey","87061316aa1948198d6f069a641515fb"),i(c,"MAX_ID",1e3);let u=c;const a=class a{constructor(t,e){i(this,"NOT_FOUND_URL","/404");i(this,"app");i(this,"homeUrl");i(this,"routes",new Set([{path:a.FILE_PREFIX+this.NOT_FOUND_URL,page:"<h1>404 Not Found</h1>"}]));this.app=document.getElementById(t),this.homeUrl=e||"/",this.initRouting()}initRouting(){window.addEventListener("hashchange",this.syncUrlHash.bind(this))}render(t){const e=this.routeExists(t)?t:a.FILE_PREFIX+this.NOT_FOUND_URL,s=this.retrievePage(e);s&&this.updateDom(s)}syncUrlHash(){let t=document.location.hash.split("#")[1];if(t===this.homeUrl)this.home();else if(t)this.render(a.FILE_PREFIX+t);else return}updateDom(t){this.app.innerHTML=t.trim()}routeExists(t){return this.getRoute(t)!==null}retrievePage(t){var e;return(e=this.getRoute(t))==null?void 0:e.page}redirect(t){window.location.hash=t}home(){return window.location.hash="",window.location.href="https://v1tor2003.github.io/FutGuesser",this}notFound(t){const e=this.getRoute(this.NOT_FOUND_URL);return this.routes.delete(e),this.NOT_FOUND_URL=t,this.add(t)}add(t){return t=a.FILE_PREFIX+t,this.fetchPage(t).then(e=>{this.routes.add({path:t,page:e}),this.syncUrlHash()}).catch(e=>console.error("Error adding route: ",e)),this}async fetchPage(t){const e=await fetch(t);if(!e.ok)throw new Error(`Failed to load HTML at '${t}: ${e.statusText}'`);return await e.text()}getRoute(t){for(const e of this.routes)if(e.path===t)return e;return null}toString(){return`Entry point:
${this.app.outerHTML}
Routes: Set(${this.routes.size})[${Array.from(this.routes).map(t=>`${t.path}, ${t.page}`).join(", ")}]`}};i(a,"FILE_PREFIX","/FutGuesser/pages");let l=a,d;document.addEventListener("DOMContentLoaded",async()=>{d=new l("app"),d.add("/tutorial.html").add("/game.html").add("/winner.html").add("/loser.html").notFound("/not-found.html"),p()});function p(){window.startGame=y}async function y(){d.redirect("/game.html");const n=new u(3);await n.start();const t=n.getRandomTeam();await new Promise(e=>setTimeout(e,1e3)),E(t),I(n.getTeams()),await F(t.name)}function m(n,t){return n===t}function w(n){return n?d.redirect("/winner.html"):d.redirect("/loser.html")}function E(n){const t=document.getElementById("teamImg");document.getElementById("loadingImg").remove(),t.src=n.crest,t.style.opacity="1"}function I(n){const t=document.getElementById("optionsList");t.innerHTML="",n.forEach(e=>{const s=document.createElement("li");s.textContent=e.name,t.appendChild(s)})}function L(n){document.getElementById("optionsList").querySelectorAll("li").forEach(s=>{s.style.backgroundColor=m(n,s.textContent)?"green":"red"})}async function T(n,t){L(n),await new Promise(e=>setTimeout(e,500)),w(m(n,t))}async function F(n){document.getElementById("optionsList").addEventListener("click",async e=>{var o;const s=e.target;s.tagName==="LI"&&await T(n,((o=s.textContent)==null?void 0:o.trim())||"")})}
